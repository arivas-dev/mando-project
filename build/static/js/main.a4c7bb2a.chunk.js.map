{"version":3,"sources":["firebase/index.js","constants/messages.js","utils/state.utils.js","context/app/App.reducer.js","context/app/App.context.js","components/Layout/Layout.js","components/routes/PrivateRoute.js","components/routes/AppRoutes.js","App.js","reportWebVitals.js","index.js","constants/app.routes.js","utils/LocalStorageHandler.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getStorage","messages","data","updateLoadableMetaProps","loadable","isLoading","error","isDirty","appReducer","state","action","clone","cloneDeep","type","user","firestore","getFirestore","auth","getAuth","initialAppState","login","Promise","resolve","email","id","id_role","name","role","AppContext","createContext","AppContextProvider","children","useReducer","dispatch","getRol","uid","a","doc","docuRef","getDoc","docuCifrada","infoFinal","setUserWithFirebaseAndRol","usuarioFirebase","rol","useCallback","password","signInWithEmailAndPassword","response","console","log","accessToken","LocalStorageHandler","token","errorCode","code","Provider","value","Header","AntdLayout","Content","Layout","activeRoute","useLocation","pathname","split","pop","user_routes","AppRoutes","admin_routes","style","float","transform","size","to","onClick","clearToken","activeKey","theme","mode","items","key","hours","label","maintenance","getMenuOptions","className","PrivateRoute","LoginPage","lazy","NotFoundPage","HoursPage","MaintenancePage","HourResults","MaintenanceResults","AppRoutesObj","notFound","path","element","replace","base","index","App","fallback","width","marginTop","tip","spinning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","users","localStorage","removeItem","this","_token","_user","jwt","setItem","userObj","stringified","JSON","stringify","parse","getItem"],"mappings":"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","file":"static/js/main.a4c7bb2a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAIAL5cNd8H_iX_M7VdBIvUN_QPQ7aeYno\",\r\n  authDomain: \"mando-project-af44d.firebaseapp.com\",\r\n  projectId: \"mando-project-af44d\",\r\n  storageBucket: \"mando-project-af44d.appspot.com\",\r\n  messagingSenderId: \"123513076707\",\r\n  appId: \"1:123513076707:web:1fea6f02c0094befc3fed6\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(firebaseApp);\r\n// export default app;","export const messages = {\r\n  \"common\":  {\r\n    \"server\": 'Sorry, there was a problem...',\r\n  },\r\n  \"auth\": {\r\n    \"incomplete\" :  'Please, enter email and password.',\r\n    \"badRequest\" :  'Invalid credentials.',\r\n    \"sessionExpired\":  'Your session has expired',\r\n    \"login\": \"Login successfully\",\r\n    \"logout\": 'Logout succesfully',\r\n  },\r\n  \"users\": {\r\n    \"created\": \"User created successfully\",\r\n    \"updated\": \"User updated successfully\",\r\n  },\r\n  \"products\": {\r\n    \"created\": \"Product created successfully\",\r\n    \"updated\": \"Product updated successfully\",\r\n  },\r\n  \"login\": {\r\n    \"auth/wrong-password\" : \"Password is incorrect\",\r\n    \"auth/user-not-found\" : \"User not found\",\r\n  }\r\n};","export const createError = (message, name) => ({\r\n  message,\r\n  name,\r\n})\r\n\r\nexport const initLoadable =(data) => ({\r\n  data,\r\n  error: null,\r\n  isDirty: false,\r\n  isLoading: false,\r\n})\r\n\r\nexport const updateLoadableMetaProps = (\r\n  loadable,\r\n  isLoading,\r\n  error = null\r\n) => {\r\n  loadable.isDirty = true\r\n  loadable.isLoading = isLoading\r\n  loadable.error = error\r\n}\r\n\r\nexport const updateLoadableData = (loadable, data) => {\r\n  updateLoadableMetaProps(loadable, false, null)\r\n  loadable.data = data\r\n}\r\n\r\nexport const shouldLoadData = (loadable) =>\r\n  !loadable.isDirty && !loadable.isLoading && !loadable.error\r\n\r\nexport const hasSuccessfullyLoaded = (loadable) =>\r\n  loadable.isDirty && !loadable.isLoading && !loadable.error\r\n","import { cloneDeep } from 'lodash'\r\n\r\nimport { updateLoadableData, updateLoadableMetaProps } from 'utils/state.utils'\r\n\r\n\r\n\r\n\r\n\r\nexport const appReducer = (state, action) => {\r\n  const clone = cloneDeep(state)\r\n\r\n  switch (action.type) {\r\n    case 'UPDATE_USER_META_PROPS':\r\n      updateLoadableMetaProps(clone.user, action.isLoading, action.error)\r\n      break\r\n    case 'UPDATE_USER_DATA':\r\n      updateLoadableData(clone.user, action.user)\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n\r\n  return clone\r\n}\r\n","import { createContext, useReducer, useCallback } from 'react'\r\nimport { initLoadable } from 'utils/state.utils'\r\nimport { appReducer } from './App.reducer'\r\nimport { LocalStorageHandler } from 'utils/LocalStorageHandler'\r\n\r\nimport {firebaseApp} from \"firebase\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nimport { messages } from 'constants/messages'\r\n\r\n\r\nimport { getFirestore, doc, collection, setDoc, getDoc } from \"firebase/firestore\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nconst firestore = getFirestore(firebaseApp);\r\nconst auth = getAuth(firebaseApp);\r\n\r\n\r\n\r\n\r\n\r\nconst initialAppState = {\r\n  login: () => Promise.resolve(''),\r\n  user: initLoadable({\r\n    email: '',\r\n    id: -1,\r\n    id_role: -1,\r\n    name: '',\r\n    role: 'user',\r\n  }),\r\n}\r\n\r\nexport const AppContext = createContext(initialAppState)\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialAppState)\r\n  const { user } = state\r\n\r\n  async function getRol(uid) {\r\n    const docuRef = await doc(firestore, `users/${uid}`);\r\n    const docuCifrada = await getDoc(docuRef);\r\n    const infoFinal = docuCifrada.data();\r\n    return infoFinal;\r\n  }\r\n\r\n  async function setUserWithFirebaseAndRol(usuarioFirebase) {\r\n    const rol = await getRol(usuarioFirebase.uid)\r\n    return rol.role\r\n  }\r\n\r\n  const login = useCallback(\r\n    async (email, password) => {\r\n      dispatch({ type: 'UPDATE_USER_META_PROPS', isLoading: true })\r\n\r\n      try {\r\n        const response = await signInWithEmailAndPassword(auth, email, password)\r\n        console.log(\"response\", response);\r\n        if (response) {\r\n          const role = await setUserWithFirebaseAndRol(response.user);\r\n          const { accessToken, ...user } = response.user\r\n\r\n         \r\n          LocalStorageHandler.token = accessToken\r\n          LocalStorageHandler.user = {...user,role}\r\n          // console.log(\"{ type: 'UPDATE_USER_DATA', user :{data : {...user,role}} }\", { type: 'UPDATE_USER_DATA', user :{data : {...user,role}} });\r\n          dispatch({ type: 'UPDATE_USER_DATA', user :  {...user,role} })\r\n          return user\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n        const errorCode = error.code;\r\n\r\n        dispatch({\r\n          type: 'UPDATE_USER_META_PROPS',\r\n          isLoading: false,\r\n          error: messages.login[errorCode],\r\n        })\r\n        return messages.login[errorCode] || 'Error'\r\n      }\r\n\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={{ user, login }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n","import { Layout as AntdLayout, Menu, Button } from 'antd'\r\nimport { Outlet, useLocation, Link } from 'react-router-dom'\r\nimport { AppRoutes } from 'constants/app.routes'\r\nimport { LocalStorageHandler } from 'utils/LocalStorageHandler'\r\nimport './Layout.css'\r\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\r\nconst { Header, Content } = AntdLayout\r\n\r\nexport const Layout = () => {\r\n  const { pathname } = useLocation()\r\n  const activeRoute = pathname.split('/').pop()\r\n  const { user_routes, admin_routes } = AppRoutes\r\n  const user = LocalStorageHandler.user\r\n\r\n\r\n  const getMenuOptions = () => {\r\n    if (!user?.role) return []\r\n    switch (user.role) {\r\n      case 'user':\r\n        return [\r\n          {\r\n            key: user_routes.hours,\r\n            label: (\r\n              <>\r\n                <Link to={`/users/${user_routes.hours}`}>Hours</Link>\r\n              </>\r\n            ),\r\n          },\r\n          {\r\n            key: user_routes.maintenance,\r\n            label: (\r\n              <>\r\n                <Link to={`/users/${user_routes.maintenance}`}>Maintenance</Link>\r\n              </>\r\n            ),\r\n          },\r\n        ]\r\n      case 'admin':\r\n        return [\r\n          {\r\n            key: admin_routes.hours,\r\n            label: (\r\n              <>\r\n                <Link to={`/admin/${admin_routes.hours}`}>Hours</Link>\r\n              </>\r\n            ),\r\n          },\r\n          {\r\n            key: admin_routes.maintenance,\r\n            label: (\r\n              <>\r\n                <Link to={`/admin/${admin_routes.maintenance}`}>Maintenance</Link>\r\n              </>\r\n            ),\r\n          },\r\n        ]\r\n    }\r\n  }\r\n \r\n  return (\r\n    <AntdLayout>\r\n      <Header>\r\n        {LocalStorageHandler.token && (\r\n          <Button\r\n            type=\"primary\"\r\n            style={{\r\n              float: 'right',\r\n              transform: 'translateY(18px)',\r\n            }}\r\n            size=\"large\"\r\n          >\r\n            <Link to=\"/login\" onClick={() => LocalStorageHandler.clearToken()}>\r\n              Logout\r\n            </Link>\r\n          </Button>\r\n        )}\r\n        <Menu\r\n          activeKey={activeRoute}\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          items={getMenuOptions()}\r\n        />\r\n\r\n      </Header>\r\n      <Content className=\"app-main-content\">\r\n        {/* <StudentContextProvider>\r\n          <LibrarianContextProvider> */}\r\n        <Outlet />\r\n        {/* </LibrarianContextProvider>\r\n        </StudentContextProvider> */}\r\n      </Content>\r\n    </AntdLayout>\r\n  )\r\n}\r\n","import { Navigate } from 'react-router-dom'\r\nimport { AppRoutes } from 'constants/app.routes'\r\n// import { LocalStorageHandler } from 'utils/LocalStorageHandler'\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n  return true ? (\r\n    children\r\n  ) : (\r\n    <Navigate to={`/${AppRoutes.login}`} />\r\n  )\r\n}\r\n","import {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Navigate,\r\n} from 'react-router-dom'\r\nimport { Layout } from 'components/Layout'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { AppRoutes as AppRoutesObj } from 'constants/app.routes'\r\nimport { lazy } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nconst LoginPage = lazy(() => import('pages/login/Login'))\r\n\r\nconst NotFoundPage = lazy(() => import('pages/NotFound/NotFound'))\r\n\r\nconst HoursPage = lazy(() => import('pages/Hours/Hours'))\r\n\r\nconst MaintenancePage = lazy(() => import('pages/Maintenance/Maintenance'))\r\n\r\nconst HourResults = lazy(() => import('pages/HourResults/HourResults'))\r\n\r\nconst MaintenanceResults = lazy(() => import('pages/MaintenanceResults/MaintenanceResults'))\r\n\r\nexport const AppRoutes = () => {\r\n    const { user_routes, login, notFound, admin_routes } = AppRoutesObj\r\n\r\n    const renderUserRoutes = () => (\r\n        <Route path={user_routes.base} element={<Layout />}>\r\n            <Route\r\n                index\r\n                element={\r\n                    <PrivateRoute>\r\n                        <Navigate to={user_routes.hours} replace />\r\n                    </PrivateRoute>\r\n                }\r\n            />\r\n\r\n            <Route path={user_routes.hours}>\r\n                <Route\r\n                    index\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <HoursPage />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n            </Route>\r\n            <Route path={user_routes.maintenance}>\r\n                <Route\r\n                    index\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <MaintenancePage />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n            </Route>\r\n        </Route>\r\n    )\r\n\r\n    const renderAdminRoutes = () => (\r\n        <Route path={admin_routes.base} element={<Layout />}>\r\n            <Route\r\n                index\r\n                element={\r\n                    <PrivateRoute>\r\n                        <Navigate to={admin_routes.hours} replace />\r\n                    </PrivateRoute>\r\n                }\r\n            />\r\n\r\n            <Route path={admin_routes.hours}>\r\n                <Route\r\n                    index\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <HourResults />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n            </Route>\r\n\r\n            <Route path={admin_routes.maintenance}>\r\n                <Route\r\n                    index\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <MaintenanceResults />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n            </Route>\r\n        </Route>\r\n    )\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Navigate to={login} replace />} />\r\n                {renderUserRoutes()}\r\n                {renderAdminRoutes()}\r\n                <Route path={login} element={<LoginPage />} />\r\n                <Route path={notFound} element={<NotFoundPage />} />\r\n            </Routes>\r\n        </Router>\r\n    )\r\n}\r\n","import { AppRoutes } from 'components/routes'\r\nimport { Suspense } from 'react'\r\nimport { AppContextProvider } from 'context/app'\r\nimport { Spin } from 'antd'\r\n\r\n\r\nconst App = () => (\r\n  <Suspense\r\n    fallback={\r\n      <Spin\r\n        style={{ width: '100%', marginTop: '4em' }}\r\n        size=\"large\"\r\n        tip=\"Your page is loading...\"\r\n        spinning\r\n      />\r\n    }\r\n  >\r\n    <AppContextProvider>\r\n      <AppRoutes />\r\n    </AppContextProvider>\r\n  </Suspense>\r\n)\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.compact.min.css'\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />\r\n  // </React.StrictMode>\r\n  ,  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const AppRoutes = {\r\n    user_routes: {\r\n      base: 'users',\r\n      hours: 'hours',\r\n      maintenance : 'maintenance'\r\n    },\r\n    admin_routes: {\r\n      base: 'admin',\r\n      hours: 'hours',\r\n      users: 'users-creation',\r\n      maintenance: 'maintenance'\r\n    },\r\n    login: 'login',\r\n    notFound: '*',\r\n  }","\r\nexport class LocalStorageHandler {\r\n    static _token = localStorage.getItem('token')\r\n    static _user = localStorage.getItem('user')\r\n\r\n    static get token(){\r\n        return this._token || ''\r\n    }\r\n\r\n    static set token(jwt) {\r\n        localStorage.setItem('token', jwt)\r\n        this._token = jwt\r\n    }\r\n\r\n    static set user(userObj) {\r\n        const stringified = JSON.stringify(userObj)\r\n        this._user = stringified\r\n        localStorage.setItem('user', stringified)\r\n    }\r\n\r\n    static get user() {\r\n        if (this._user) {\r\n            return JSON.parse(this._user) || {}\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    static clearToken() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('user')\r\n        this._token = null\r\n        this._user = null\r\n    }\r\n}\r\n"],"sourceRoot":""}