{"version":3,"sources":["hooks/useMessenger.js","assets/img/welcome.svg","utils/data.js","components/userModal/UserModal.js","components/users/Users.js","components/productModal/ProductModal.js","components/products/Products.js","pages/dashboard/Dashboard.js"],"names":["useMessenger","loadable","success","isLoading","firstFetch","error","useState","wasDisplayed","setWasDisplayed","displayMessage","useCallback","message","useEffect","getDateFormat","str","date","Date","year","Intl","DateTimeFormat","format","month","day","userFields","adding","date_of_birth","name","telephone","username","email","password","password_confirmation","UserModal","action","visible","setVisible","onSave","onUpdate","loading","user","fields","setFields","userId","setUserId","id","handleChange","evt","target","value","prevValue","handleSubmit","a","preventDefault","className","title","centered","onCancel","sh","width","footer","onSubmit","sm","lg","span","offset","required","type","placeholder","onChange","maxLength","pattern","minLength","Users","currentPage","setCurrentPage","selectedUser","setSelectedUser","modalOpen","setModalOpen","modalAction","setModalAction","dispatch","useDispatch","usersNode","useSelector","s","users","registerNode","product","register","updateNode","update","data","messages","created","updated","columns","align","dataIndex","key","render","text","record","checked","e","toLocaleDateString","retrieveUsers","registerUser","updateUser","meta","per_page","perPage","total","onClick","disabled","dataSource","list","pagination","rowKey","scroll","x","defaultCurrent","pageSize","page","handlePagination","ProductModal","SKU","quantity","price","description","image","productId","setProductId","files","accept","rows","Products","selected","setSelected","productsNode","products","class","retrieveProducts","updateProduct","handleDelete","deleteProduct","onConfirm","okText","cancelText","href","saveProduct","Welcome","src","WelcomeImg","alt","Dashboard","useRouteMatch","path","url","to","logout","auth","exact","component"],"mappings":"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","file":"static/js/6.622335aa.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useMessenger = (loadable = {}, success) => {\r\n  const { isLoading, firstFetch, error } = loadable;\r\n  const [wasDisplayed, setWasDisplayed] = useState(!isLoading && !firstFetch);\r\n\r\n  const displayMessage = useCallback(() => {\r\n    if (error) {\r\n      message.error(error);\r\n    } else {\r\n      message.success(success);\r\n    }\r\n  }, [error, success]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && !firstFetch && !wasDisplayed) {\r\n      displayMessage();\r\n    }\r\n  }, [isLoading, displayMessage, firstFetch, wasDisplayed]);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      setWasDisplayed(false);\r\n    }\r\n  }, [isLoading]);\r\n\r\n  return null;\r\n};","export default __webpack_public_path__ + \"static/media/welcome.f18f6168.svg\";","export const getDateFormat = str => {\r\n  if (!str) return '';\r\n  const date = new Date(str);\r\n  const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n  const month = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(date);\r\n  const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n  return `${year}-${month}-${day}`;\r\n}","import { getDateFormat } from 'utils/data';\r\nimport { Modal, message, Col, Row } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './UserModal.scss';\r\n\r\nconst userFields = (adding = false) => ({\r\n  date_of_birth: '',\r\n  name: '',\r\n  telephone: '',\r\n  username: '',\r\n  email: '',\r\n  ...adding && {password: '',  password_confirmation: ''},\r\n});\r\n\r\nexport const UserModal = ({ action, visible, setVisible, onSave, onUpdate, loading, user }) => {\r\n  const [fields, setFields] = useState(userFields(action === 'New'));\r\n  const [userId, setUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      action !== 'New' &&\r\n      user.email !== fields.email &&\r\n      user.id !== userId\r\n    ) {\r\n      setUserId(user.id);\r\n      const { date_of_birth, name, telephone, username, email } = user;\r\n      setFields({\r\n        ...fields,\r\n        date_of_birth: getDateFormat(date_of_birth),\r\n        email,\r\n        name,\r\n        telephone,\r\n        username\r\n      });\r\n    }\r\n  }, [user, fields, action, userId]);\r\n\r\n  useEffect(() => {\r\n    if (visible && action === 'New') {\r\n      setFields(userFields(true));\r\n    }\r\n  }, [visible, action]);\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n    setFields((prevValue) => ({\r\n      ...prevValue, \r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    if (action === 'New') {\r\n      if (fields.password !== fields.password_confirmation) {\r\n        return message.error('Password must be the same');\r\n      }\r\n      onSave(fields);\r\n    } else {\r\n      onUpdate(fields);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"user-modal\"\r\n      title={`${action} user`}\r\n      centered\r\n      visible={visible}\r\n      onCancel={() => setVisible(false)}\r\n      sh\r\n      width={1000}\r\n      footer={null}\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col sm={24} lg={{ span: 23, offset: 1 }} className=\"user-modal-item\">\r\n            <label>Birthdate</label>\r\n            <input \r\n              required \r\n              className=\"input\" \r\n              type=\"date\" \r\n              placeholder=\"Input your birthdate\" \r\n              onChange={handleChange}\r\n              name=\"date_of_birth\"\r\n              value={fields.date_of_birth}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n            <label>Name</label>\r\n            <input \r\n              required \r\n              className=\"input\" \r\n              type=\"text\" \r\n              placeholder=\"Input your name\" \r\n              onChange={handleChange}\r\n              maxLength=\"30\"\r\n              name=\"name\"\r\n              value={fields.name}\r\n            />\r\n          </Col>\r\n          <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n            <label>Phone number</label>\r\n            <input \r\n              className=\"input\" \r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Input your phone number\" \r\n              pattern=\"[2|6|7]{1}[0-9]{7}\"\r\n              onChange={handleChange}\r\n              maxLength=\"8\"\r\n              minLength=\"8\"\r\n              name=\"telephone\"\r\n              value={fields.telephone}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n            <label>Username</label>\r\n            <input \r\n              required \r\n              className=\"input\" \r\n              type=\"text\" \r\n              placeholder=\"Input your username\" \r\n              onChange={handleChange}\r\n              maxLength=\"10\"\r\n              name=\"username\"\r\n              value={fields.username}\r\n            />\r\n          </Col>\r\n          <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n            <label>Email</label>\r\n            <input \r\n              required \r\n              className=\"input\" \r\n              type=\"email\" \r\n              placeholder=\"Input your email\" \r\n              onChange={handleChange}\r\n              name=\"email\"\r\n              value={fields.email}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        {\r\n          action === 'New' && (\r\n            <Row>\r\n              <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                <label>Password</label>\r\n                <input \r\n                  required \r\n                  className=\"input\" \r\n                  type=\"password\" \r\n                  placeholder=\"Input your password\" \r\n                  onChange={handleChange}\r\n                  maxLength=\"10\"\r\n                  name=\"password\"\r\n                  value={fields.password}\r\n                />\r\n              </Col>\r\n              <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                <label>Confirm password</label>\r\n                <input \r\n                  required \r\n                  className=\"input\" \r\n                  type=\"password\" \r\n                  placeholder=\"Confirm your password\" \r\n                  onChange={handleChange}\r\n                  maxLength=\"10\"\r\n                  name=\"password_confirmation\"\r\n                  value={fields.password_confirmation}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          )\r\n        }\r\n\r\n        <div className=\"user-modal-submit\">\r\n            <input className=\"button is-dark\" type=\"reset\" value=\"Clean\" />\r\n            <input className={`button is-dark ${loading ? 'is-loading' : ''}`} type=\"submit\" value=\"Save\" />\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Table, Pagination } from 'antd';\r\nimport { retrieveUsers, registerUser, updateUser } from 'store/actions/userActions';\r\nimport { UserModal } from 'components/userModal/UserModal';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useMessenger } from 'hooks/useMessenger';\r\nimport { messages } from 'constants/messages';\r\nimport './Users.scss';\r\n\r\n\r\nexport const Users = () => {\r\n  //Local state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalAction, setModalAction] = useState('New');\r\n\r\n  //Redux\r\n  const dispatch = useDispatch();\r\n  const usersNode = useSelector(s => s.user.users);\r\n  const registerNode = useSelector(s => s.product.register);\r\n  const updateNode = useSelector(s => s.user.update);\r\n  const { isLoading, data, firstFetch } = usersNode;\r\n\r\n  //Messages\r\n  useMessenger(registerNode, messages.users.created);\r\n  useMessenger(updateNode, messages.users.updated);\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: ' ',\r\n      align: 'center',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      render: (text, record) => (\r\n        <div className=\"control\">\r\n          <label className=\"radio\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"user\"\r\n              checked={record.id === selectedUser.id}\r\n              onChange={(e) => setSelectedUser(record)}\r\n            />\r\n          </label>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: 'Phone number',\r\n      dataIndex: 'telephone',\r\n      key: 'telephone',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: 'Username',\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: 'Birthdate',\r\n      dataIndex: 'date_of_birth',\r\n      key: 'date_of_birth',\r\n      align: 'center',\r\n      render: text => {\r\n        return new Date(text).toLocaleDateString();\r\n      }\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      align: 'center'\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (firstFetch && !isLoading) {\r\n      dispatch(retrieveUsers(currentPage));\r\n    }\r\n  }, [firstFetch, isLoading, dispatch, currentPage]);\r\n\r\n  const handleNew = () => {\r\n    setModalAction('New');\r\n    setModalOpen(true);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setModalAction('Update');\r\n    setModalOpen(true);\r\n  }\r\n\r\n  const handlePagination = page => {\r\n    if (page !== currentPage) {\r\n      setCurrentPage(page);\r\n      dispatch(retrieveUsers(page));\r\n    }\r\n  }\r\n\r\n  const onSave = async (user) => {\r\n    await dispatch(registerUser(user, currentPage));\r\n    setModalOpen(false);\r\n  }\r\n\r\n  const onUpdate = async (user) => {\r\n    await dispatch(updateUser({ ...user, id: selectedUser.id }));\r\n    setSelectedUser({});\r\n    setModalOpen(false);\r\n  }\r\n\r\n  const { per_page: perPage = 15, total } = data.meta || {}\r\n\r\n  return (\r\n    <div className=\"users\">\r\n      <div className=\"users-actions\">\r\n        <button\r\n          onClick={handleNew}\r\n          className=\"button is-dark\"\r\n        >\r\n          New user\r\n        </button>\r\n        <button\r\n          onClick={handleUpdate}\r\n          disabled={!selectedUser.id}\r\n          className=\"button is-info\"\r\n        >\r\n          Update user\r\n        </button>\r\n      </div>\r\n      <div className=\"users-data\">\r\n        <Table\r\n          loading={isLoading}\r\n          dataSource={data.list}\r\n          columns={columns}\r\n          pagination={false}\r\n          rowKey=\"id\"\r\n          scroll={{ x: 1200 }}\r\n        />\r\n        <div className=\"users-pagination\">\r\n          <Pagination\r\n            disabled={isLoading}\r\n            total={total}\r\n            defaultCurrent={1}\r\n            pageSize={perPage}\r\n            onChange={page => handlePagination(page)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <UserModal\r\n        action={modalAction}\r\n        setVisible={setModalOpen}\r\n        visible={modalOpen}\r\n        loading={registerNode.isLoading || updateNode.isLoading}\r\n        onSave={onSave}\r\n        onUpdate={onUpdate}\r\n        user={selectedUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { getDateFormat } from 'utils/data';\r\nimport { Modal, Col, Row } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n// import './UserModal.scss';\r\n\r\n\r\nconst productFields = (adding = false) => ({\r\n    SKU: '',\r\n    name: '',\r\n    quantity: '',\r\n    price: '',\r\n    description: '',\r\n    image: ''\r\n});\r\n\r\nexport const ProductModal = ({ action, visible, setVisible, product, onSave,onUpdate }) => {\r\n    const [fields, setFields] = useState(productFields(action === 'New'));\r\n    const [productId, setProductId] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (\r\n            action !== 'New' && product.id !== productId\r\n        ) {\r\n            setProductId(product.id);\r\n            const { SKU, name, quantity, price, description } = product;\r\n            setFields({\r\n                SKU, name, quantity, price, description\r\n            });\r\n        }\r\n    }, [product, fields, action, productId]);\r\n\r\n    useEffect(() => {\r\n        if (visible && action === 'New') {\r\n            setFields(productFields(true));\r\n        }\r\n    }, [visible, action]);\r\n\r\n\r\n    const handleChange = evt => {\r\n        const { name, value } = evt.target;\r\n        setFields((prevValue) => ({\r\n            ...prevValue,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        if (action === 'New') {\r\n            onSave(fields);\r\n        } else {\r\n            onUpdate(fields)\r\n        }\r\n        setFields({});\r\n        setVisible(false);\r\n    };\r\n\r\n    const loadImg = (e) => {\r\n        if(e.target.files[0]){\r\n\r\n            setFields((prevValue) => ({\r\n                ...prevValue,\r\n                image : e.target.files[0]\r\n            }));\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            className=\"user-modal\"\r\n            title={`${action} Product`}\r\n            centered\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            sh\r\n            width={1000}\r\n            footer={null}\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>SKU</label>\r\n                        <input\r\n                            required\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Input SKU\"\r\n                            onChange={handleChange}\r\n                            name=\"SKU\"\r\n                            value={fields.SKU}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            required\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Input your name\"\r\n                            onChange={handleChange}\r\n                            maxLength=\"30\"\r\n                            name=\"name\"\r\n                            value={fields.name}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>Quantity</label>\r\n                        <input\r\n                            className=\"input\"\r\n                            required\r\n                            type=\"number\"\r\n                            placeholder=\"Input quantity\"\r\n                            onChange={handleChange}\r\n                            name=\"quantity\"\r\n                            value={fields.quantity}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>Price</label>\r\n                        <input\r\n                            required\r\n                            className=\"input\"\r\n                            type=\"money\"\r\n                            placeholder=\"Input Price\"\r\n                            onChange={handleChange}\r\n                            name=\"price\"\r\n                            value={fields.price}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>Image</label>\r\n                        <input\r\n                            required\r\n                            className=\"input\"\r\n                            type=\"file\"\r\n                            placeholder=\"Input Price\"\r\n                            onChange={loadImg}\r\n                            name=\"image\"\r\n                            // value={fields.image}\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </Col>\r\n                    <Col sm={24} lg={{ span: 11, offset: 1 }} className=\"user-modal-item\">\r\n                        <label>Description</label>\r\n                        <textarea\r\n                            required\r\n                            className=\"input\"\r\n                            placeholder=\"Input description\"\r\n                            onChange={handleChange}\r\n                            name=\"description\"\r\n                            value={fields.description}\r\n                            rows={3}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <div className=\"user-modal-submit\">\r\n                    <input className=\"button is-dark\" type=\"reset\" value=\"Clean\" />\r\n                    <input className=\"button is-dark\" type=\"submit\" value=\"Save\" />\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import { Table, Pagination } from 'antd';\r\nimport { deleteProduct, retrieveProducts, saveProduct, updateProduct } from 'store/actions/productActions';\r\nimport { ProductModal } from 'components/productModal/ProductModal';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useMessenger } from 'hooks/useMessenger';\r\nimport { messages } from 'constants/messages';\r\n// import { storage } from '../../firebase'\r\nimport { Popconfirm } from '../../../node_modules/antd/lib/index';\r\n\r\n\r\n\r\n\r\nexport const Products = () => {\r\n    //Local state\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selected, setSelected] = useState({});\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [modalAction, setModalAction] = useState('New');\r\n\r\n    //Redux\r\n    const productsNode = useSelector(s => s.product.products);\r\n    const registerNode = useSelector(s => s.product.register);\r\n    const updateNode = useSelector(s => s.product.update);\r\n    const { isLoading, data, firstFetch } = productsNode;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //Messages\r\n    useMessenger(registerNode, messages.products.created);\r\n    useMessenger(updateNode, messages.products.updated);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: ' ',\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <div className=\"control\">\r\n                    <label class=\"radio\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"user\"\r\n                            checked={record.id === selected.id}\r\n                            onChange={(e) => setSelected(record)}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'SKU',\r\n            dataIndex: 'SKU',\r\n            key: 'SKU',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'quantity',\r\n            key: 'quantity',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            key: 'description',\r\n            align: 'center'\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (firstFetch && !isLoading) {\r\n            dispatch(retrieveProducts(currentPage));\r\n        }\r\n    }, [firstFetch, isLoading, dispatch, currentPage]);\r\n\r\n    const handleNew = () => {\r\n        setModalAction('New');\r\n        setModalOpen(true);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setModalAction('Update');\r\n        setModalOpen(true);\r\n    }\r\n\r\n    const handlePagination = page => {\r\n        if (page !== currentPage) {\r\n            setCurrentPage(page);\r\n            dispatch(retrieveProducts(page));\r\n        }\r\n    }\r\n\r\n    const onSave = product => {\r\n        dispatch(saveProduct(product, currentPage));\r\n    }\r\n\r\n    const onUpdate = async (product) => {\r\n        await dispatch(updateProduct({ ...product, id: selected.id }));\r\n        setSelected({});\r\n        setModalOpen(false);\r\n    }\r\n\r\n    const handleDelete = async() => {\r\n        await dispatch(deleteProduct({ id: selected.id }));\r\n        setSelected({});\r\n    }\r\n\r\n\r\n    const { per_page: perPage = 15, total: pageTotal = 1 } = data.meta || {}\r\n    const total = perPage * pageTotal;\r\n\r\n    return (\r\n        <div className=\"users\">\r\n            <div className=\"users-actions\">\r\n                <button\r\n                    onClick={handleNew}\r\n                    className=\"button is-dark\"\r\n                >\r\n                    New Product\r\n                </button>\r\n                <button\r\n                    onClick={handleUpdate}\r\n                    disabled={!selected.id}\r\n                    className=\"button is-info\"\r\n                >\r\n                    Update Product\r\n                </button>\r\n\r\n                <Popconfirm\r\n                    title=\"Are you sure to delete this product?\"\r\n                    onConfirm={handleDelete}\r\n                    onCancel={null}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"No\"\r\n                    disabled={!selected.id}\r\n                >\r\n                    <a\r\n                        href=\"!#\"\r\n                        disabled={!selected.id}\r\n                        className=\"button is-danger\"\r\n                    >\r\n                        Delete Product\r\n                </a>\r\n                </Popconfirm>\r\n\r\n            </div>\r\n            <div className=\"users-data\">\r\n                <Table\r\n                    loading={isLoading}\r\n                    dataSource={data.list}\r\n                    columns={columns}\r\n                    pagination={false}\r\n                    scroll={{ x: 1200 }}\r\n                />\r\n                <div className=\"users-pagination\">\r\n                    <Pagination\r\n                        disabled={isLoading}\r\n                        total={total}\r\n                        defaultCurrent={1}\r\n                        pageSize={perPage}\r\n                        onChange={page => handlePagination(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <ProductModal\r\n                action={modalAction}\r\n                setVisible={setModalOpen}\r\n                visible={modalOpen}\r\n                loading={registerNode.isLoading || updateNode.isLoading}\r\n                onSave={onSave}\r\n                onUpdate={onUpdate}\r\n                product={selected}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { logout } from 'store/actions/userActions';\r\nimport { message } from 'antd';\r\nimport { messages } from 'constants/messages';\r\nimport React from 'react';\r\nimport WelcomeImg from 'assets/img/welcome.svg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Users } from 'components/users/Users';\r\nimport { Products } from 'components/products/Products';\r\nimport { Link, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport './Dashboard.scss';\r\n\r\nconst Welcome = () => (\r\n  <div className=\"welcome\">\r\n    <img src={WelcomeImg} alt=\"Welcome\" />\r\n    <h3>Welcome to the dashboard...Explore some options.</h3>\r\n  </div>\r\n)\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { path, url } = useRouteMatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    message.success(messages.auth.logout);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-menu\">\r\n        <h3 className=\"dashboard-title\">Dashboard</h3>\r\n        <ul className=\"dashboard-options\">\r\n          <li>\r\n            <Link to={`${url}/users`}>USERS</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`${url}/products`}>PRODUCTS</Link>\r\n          </li>\r\n          <li onClick={handleLogout}>\r\n            LOGOUT\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"dashboard-content\">\r\n        <Switch>\r\n            <Route exact path={path} component={Welcome} />\r\n            <Route exact path={`${path}/users`} component={Users} />\r\n            <Route exact path={`${path}/products`} component={Products} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}