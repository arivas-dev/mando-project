{"version":3,"sources":["components/TableToExcel/index.js","pages/HourResults/HourResults.js"],"names":["TableToExcel","props","columns","infoBody","nombreArchivo","length","className","style","display","alignItems","type","onClick","option","headers","map","e","title","fileName","moment","Date","format","datas","sheetData","sheetHeader","ExportJsonExcel","saveExcel","downloadExcel","icon","f","dataIndex","key","HourResults","useState","data","setData","firestore","getFirestore","firebaseApp","useEffect","getAll","a","getDocs","collection","docuCifrada","year","getFullYear","documentos","docs","doc","index","id","indexes","reduce","acc","el","concat","Title","align","gutter","span","offset","d","dataSource"],"mappings":"8KA0CeA,IApCf,SAAsBC,GAAQ,IAClBC,EAAqCD,EAArCC,QAASC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,cAqB3B,OACID,EAASE,OAAS,GAClB,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAQC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAYC,KAAK,UAAUC,QAAS,kBApBxE,WAClB,IAAIC,EAAS,GACTC,EAAUX,EAAQY,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SAEjCJ,EAAOK,SAAWb,EAAgBA,EAAgB,IAAMc,IAAO,IAAIC,MAAMC,OAAO,cAAgBF,IAAO,IAAIC,MAAMC,OAAO,cACxHR,EAAOS,MAAQ,CACX,CACIC,UAAWnB,EACXoB,YAAY,YAAKV,KAIX,IAAIW,IAAgBZ,GAC1Ba,YAOwFC,IAAiBC,KAAM,cAAC,IAAD,IAA/G,8BAEJ,uBACA,4B,8KC1BNzB,EADS,CAAC,KAAM,OAAQ,UAAW,gBAAiB,OAAQ,kBAAmB,UAAW,gBAAiB,gBAC1FY,KAAI,SAAAc,GAAC,MAAK,CAC7BZ,MAAOY,EACPC,UAAWD,EACXE,IAAKF,MA2CMG,UAzCK,WAAO,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,KAEhBC,EAAYC,YAAaC,KAE/BC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAM,uCAAG,gCAAAC,EAAA,sEACeC,YAAQC,YAAWP,EAAD,UADjC,OACLQ,EADK,OAELC,GAAO,IAAIzB,MAAO0B,cAClBC,EAAaH,EAAYI,KAAKjC,KAAI,SAACkC,EAAKC,GAAN,mBAAC,eAAqBD,EAAIf,QAA1B,IAAkCiB,GAAG,GAAD,OAAKN,EAAL,cAAeK,EAAQ,QACnGf,EAAQY,GAJG,2CAAH,qDAQNK,EAAUjD,EAAQkD,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAIE,OAAOD,EAAGzB,aAAY,IAEtE,OACI,sBAAKvB,UAAU,aAAf,UACI,uBACA,cAAC,IAAWkD,MAAZ,CAAkBC,MAAM,SAAxB,2BACA,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKpD,UAAU,aAAaqD,KAAM,EAAGC,OAAQ,EAA7C,SACI,cAAC,IAAD,CAAc1D,QAASA,EAASE,cAAe,gBAC3CD,SAAQ,YAAO8B,EAAMnB,KAAI,SAAC+C,GAAD,sBAClBV,EAAQC,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAkBD,GAAnB,kBAAyBC,EAAKO,EAAEP,OAAQ,eAI1E,cAAC,IAAD,UACI,cAAC,IAAD,CAAKhD,UAAU,aAAaqD,KAAM,GAAIC,OAAQ,EAA9C,SACI,cAAC,IAAD,CAAO1D,QAASA,EAAS4D,WAAY7B","file":"static/js/13.b2cf1a82.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'antd';\r\nimport moment from 'moment'\r\nimport ExportJsonExcel from 'js-export-excel';\r\nimport { FileExcelOutlined } from '@ant-design/icons';\r\n\r\nfunction TableToExcel(props) {\r\n    const { columns, infoBody, nombreArchivo } = props\r\n    // 1. COLUMNS, definidas en cuerpo de tabla, sirve para encabezado de celdas\r\n    // 2. INFOBODY, arreglo con la informacion del cuerpo del excel\r\n    // 3. NOMBREARCHIVO, nombre con el cual se descargarÃ¡ por defecto nuestro excel\r\n\r\n    const downloadExcel = () => {\r\n        var option = {};\r\n        let headers = columns.map(e => e.title)\r\n\r\n        option.fileName = nombreArchivo ? nombreArchivo + '_' + moment(new Date).format('DD-MM-YYYY') : moment(new Date).format('DD-MM-YYYY')\r\n        option.datas = [\r\n            {\r\n                sheetData: infoBody,\r\n                sheetHeader: [...headers],\r\n            }\r\n        ];\r\n\r\n        var toExcel = new ExportJsonExcel(option);\r\n        toExcel.saveExcel();\r\n    }\r\n\r\n    return (\r\n        infoBody.length > 0 &&\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12 text-rigth\">\r\n                <Button style={{ display: 'flex', alignItems: 'center' }} type=\"primary\" onClick={() => downloadExcel()} icon={<FileExcelOutlined />}>Download Excel</Button>\r\n            </div>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TableToExcel","import React, { useState, useEffect } from 'react'\r\nimport { Table, Typography,Row,Col } from 'antd'\r\nimport { firebaseApp } from \"firebase\";\r\nimport { getFirestore, doc, collection, getDocs, } from \"firebase/firestore\";\r\nimport TableToExcel from 'components/TableToExcel/index';\r\n\r\n\r\n\r\nconst fields = ['id', 'date', 'day_off', 'justification', 'name', 'number_of_hours', 'station', 'time_of_entry', 'time_of_exit']\r\nconst columns = fields.map(f => ({\r\n    title: f,\r\n    dataIndex: f,\r\n    key: f,\r\n}))\r\nconst HourResults = () => {\r\n    const [data, setData] = useState([])\r\n    const firestore = getFirestore(firebaseApp);\r\n\r\n    useEffect(() => {\r\n        getAll()\r\n    }, [])\r\n\r\n    const getAll = async () => {\r\n        const docuCifrada = await getDocs(collection(firestore, `hours`));\r\n        const year = new Date().getFullYear()\r\n        const documentos = docuCifrada.docs.map((doc, index) => ({ ...doc.data(), id: `${year}-00${index + 1}` }));\r\n        setData(documentos)\r\n\r\n    }\r\n\r\n    const indexes = columns.reduce((acc, el) => acc.concat(el.dataIndex), []);\r\n\r\n    return (\r\n        <div className=\"books-page\">\r\n            <br />\r\n            <Typography.Title align=\"center\">Hours Results</Typography.Title>\r\n            <Row gutter={16}>\r\n                <Col className=\"gutter-row\" span={6} offset={1}>\r\n                    <TableToExcel columns={columns} nombreArchivo={'Hours Results'}\r\n                        infoBody={[...(data).map((d) => ({\r\n                            ...indexes.reduce((acc, el) => ({ ...acc, [el]: d[el] }), {})\r\n                        }))]} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"gutter-row\" span={22} offset={1}>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourResults"],"sourceRoot":""}