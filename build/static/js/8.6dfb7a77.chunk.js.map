{"version":3,"sources":["assets/img/login/logo.jpeg","pages/login/Login.js"],"names":["Login","useRef","useContext","AppContext","login","user","form","setRole","Form","useForm","LocalStorageHandler","token","to","data","role","AppRoutes","user_routes","base","admin_routes","className","src","security","onFinish","email","password","then","r","message","error","layout","style","width","tip","spinning","isLoading","Item","label","name","rules","required","placeholder","type","min","max","Password","htmlType"],"mappings":"4FAAe,QAA0B,mC,0LCgH1BA,UApGD,WACKC,mBAAf,IADgB,EAGiBC,qBAAWC,KAApCC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,KAETC,GALU,EAGKC,QAERC,IAAKC,UAAU,IAgB5B,OAAIC,IAAoBC,MAEhB,cAAC,IAAD,CACIC,GACuB,SAAnBP,EAAKQ,KAAKC,KAAV,WACUC,IAAUC,YAAYC,MADhC,WAEUF,IAAUG,aAAaD,QAQ7C,qCACI,sBAAME,UAAU,aAChB,sBAAKA,UAAU,QAAf,UACI,qBAAKC,IAAKC,IAAUF,UAAU,SAC9B,cAAC,IAAD,CACIA,UAAU,kBACVb,KAAMA,EACNgB,SAlCS,SAACT,GACtBT,EAAMS,EAAKU,MAAOV,EAAKW,UAAUC,MAAK,SAACC,GACnC,GAAiB,kBAANA,EAAgB,OAAOC,IAAQC,MAAMF,OAiCxCG,OAAO,WAEPC,MAAO,CAAEC,MAAO,QANpB,SASI,eAAC,IAAD,CAAMC,IAAI,aAAaC,SAAU5B,EAAK6B,UAAtC,UAEI,cAAC,IAAKC,KAAN,CACIC,MAAM,QACNC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAMZ,QAAS,6BAHvC,SAKI,cAAC,IAAD,CACIa,YAAY,QACZC,KAAK,QACLtB,UAAU,uBAKlB,cAAC,IAAKgB,KAAN,CACIC,MAAM,WACNC,KAAK,WACLC,MAAO,CACH,CAAEC,UAAU,EAAMZ,QAAS,+BAC3B,CACIe,IAAK,EACLf,QAAS,+CAEb,CACIgB,IAAK,GACLhB,QAAS,gDAXrB,SAeI,cAAC,IAAMiB,SAAP,CACIJ,YAAY,WACZrB,UAAU,0BAIlB,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAQ0B,SAAS,QAAjB,oBACA,cAAC,IAAD,CAAQJ,KAAK,UAAUI,SAAS,SAAhC","file":"static/js/8.6dfb7a77.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c94fb522.jpeg\";","import { messages } from 'constants/messages';\r\nimport security from 'assets/img/login/logo.jpeg';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport React, { useState, useRef } from 'react'\r\nimport './Login.scss';\r\n\r\nimport { AppContext } from 'context/app'\r\nimport { LocalStorageHandler } from 'utils/LocalStorageHandler'\r\nimport { useContext } from 'react'\r\nimport { Form, Spin, Button, Input, message } from 'antd'\r\nimport { AppRoutes } from 'constants/app.routes';\r\n\r\nconst Login = () => {\r\n    const btnRef = useRef();\r\n\r\n    const { login, user, setRole } = useContext(AppContext)\r\n    \r\n    const form = Form.useForm()[0]\r\n\r\n\r\n    const handleFormSubmit = (data) => {\r\n        login(data.email, data.password).then((r) => {\r\n            if (typeof r === 'string') return message.error(r)\r\n        })\r\n    }\r\n\r\n\r\n    const handleKey = evt => {\r\n        if (evt.keyCode === 13 && btnRef.current) {\r\n            btnRef.current.click();\r\n        }\r\n    }\r\n\r\n    if (LocalStorageHandler.token) {\r\n        return (\r\n            <Navigate\r\n                to={\r\n                    user.data.role === 'user'\r\n                        ? `/${AppRoutes.user_routes.base}`\r\n                        : `/${AppRoutes.admin_routes.base}`\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <span className=\"login-bg\" />\r\n            <div className=\"login\">\r\n                <img src={security} className=\"logo\" />\r\n                <Form\r\n                    className=\"login-page-form\"\r\n                    form={form}\r\n                    onFinish={handleFormSubmit}\r\n                    layout=\"vertical\"\r\n                    // initialValues={{email: 'user@gmail.com',password : 'Inicio123'}}\r\n                    style={{ width: '100%' }}\r\n                >\r\n\r\n                    <Spin tip=\"Loading...\" spinning={user.isLoading} >\r\n\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: 'Please input your email.' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                                className=\"login-page-email\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: 'Please input your password.' },\r\n                                {\r\n                                    min: 8,\r\n                                    message: 'Your passsword should have 8 chars at least',\r\n                                },\r\n                                {\r\n                                    max: 30,\r\n                                    message: 'Your passsword should not exceeed 30 chars.',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                placeholder=\"Password\"\r\n                                className=\"login-page-password\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <div className=\"login-page-buttons\">\r\n                            <Button htmlType=\"reset\">Cancel</Button>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Spin>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}